This file is a merged representation of the entire codebase, combining all repository files into a single document.
Generated by Repomix on: 2025-05-12T00:33:56.735Z

================================================================
File Summary
================================================================

Purpose:
--------
This file contains a packed representation of the entire repository's contents.
It is designed to be easily consumable by AI systems for analysis, code review,
or other automated processes.

File Format:
------------
The content is organized as follows:
1. This summary section
2. Repository information
3. Repository structure
4. Multiple file entries, each consisting of:
  a. A separator line (================)
  b. The file path (File: path/to/file)
  c. Another separator line
  d. The full contents of the file
  e. A blank line

Usage Guidelines:
-----------------
- This file should be treated as read-only. Any changes should be made to the
  original repository files, not this packed version.
- When processing this file, use the file path to distinguish
  between different files in the repository.
- Be aware that this file may contain sensitive information. Handle it with
  the same level of security as you would the original repository.

Notes:
------
- Some files may have been excluded based on .gitignore rules and Repomix's
  configuration.
- Binary files are not included in this packed representation. Please refer to
  the Repository Structure section for a complete list of file paths, including
  binary files.

Additional Info:
----------------

For more information about Repomix, visit: https://github.com/yamadashy/repomix

================================================================
Repository Structure
================================================================
components/
  Content/
    Content.module.css
    Content.tsx
  Logo/
    Logo.module.css
    Logo.tsx
  Menu/
    Menu.module.css
    Menu.tsx
  MenuBox/
    MenuBox.module.css
    MenuBox.tsx
  Modal/
    Modal.module.css
    Modal.tsx
hooks/
  useMediaQuery.ts
pages/
  Careers/
    Careers.module.css
    Careers.tsx
  Home/
    Home.module.css
    Home.tsx
  Impel/
    Impel.module.css
    Impel.tsx
  OmanTablet/
    OmanTablet.module.css
    OmanTablet.tsx
routes/
  AppRoutes.tsx
styles/
  global.css
types/
  css.d.ts
App.tsx
main.tsx

================================================================
Repository Files
================================================================

================
File: components/Content/Content.module.css
================
.content {
    margin-top: 20px;
    padding: 20px;
    width: 90%;
    max-width: 1080px;
    background-color: white;
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
  }
  
  .contentSection {
    display: none;
  }
  
  .visible {
    display: block;
  }
  
  /* Responsive adjustments */
  @media (max-width: 768px) {
    .content {
      padding: 15px;
    }
  }
  
  @media (max-width: 480px) {
    .content {
      padding: 10px;
      margin-top: 15px;
    }
  }

================
File: components/Content/Content.tsx
================
import React from 'react';
import styles from './Content.module.css';

interface ContentProps {
  activeSection: string | null;
}

const Content: React.FC<ContentProps> = ({ activeSection }) => {
  if (!activeSection) return null;

  return (
    <div className={styles.content}>
      <div 
        id="section1" 
        className={`${styles.contentSection} ${activeSection === 'section1' ? styles.visible : ''}`}
      >
        Content for Knowledge Library
      </div>
      <div 
        id="section2" 
        className={`${styles.contentSection} ${activeSection === 'section2' ? styles.visible : ''}`}
      >
        Content for Interactive Files
      </div>
      <div 
        id="section3" 
        className={`${styles.contentSection} ${activeSection === 'section3' ? styles.visible : ''}`}
      >
        Content for Join Us Form
      </div>
      <div 
        id="section4" 
        className={`${styles.contentSection} ${activeSection === 'section4' ? styles.visible : ''}`}
      >
        Content for Demo
      </div>
      <div 
        id="section5" 
        className={`${styles.contentSection} ${activeSection === 'section5' ? styles.visible : ''}`}
      >
        Content for Static Page 1
      </div>
      <div 
        id="section6" 
        className={`${styles.contentSection} ${activeSection === 'section6' ? styles.visible : ''}`}
      >
        Content for Static Page 2
      </div>
    </div>
  );
};

export default Content;

================
File: components/Logo/Logo.module.css
================
.logo {
    width: 100%;
    background-color: white;
    color: #333;
    text-align: center;
    padding: 20px 0;
    font-size: 24px;
    font-weight: bold;
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
    margin-bottom: 30px;
  }
  
  .logo img {
    max-height: 60px;
  }
  
  /* Responsive adjustments */
  @media (max-width: 768px) {
    .logo {
      padding: 15px 0;
      margin-bottom: 20px;
    }
    
    .logo img {
      max-height: 40px;
    }
  }
  
  @media (max-width: 480px) {
    .logo {
      padding: 10px 0;
      margin-bottom: 15px;
    }
    
    .logo img {
      max-height: 30px;
    }
  }

================
File: components/Logo/Logo.tsx
================
import React from 'react';
import styles from './Logo.module.css';
import hydroLogo from '../../assets/hydroLogo.gif';

const Logo: React.FC = () => {
  return (
    <div className={styles.logo}>
      <img src={hydroLogo} alt="Hydro Logo" />
    </div>
  );
};

export default Logo;

================
File: components/Menu/Menu.module.css
================
.menu {
    display: grid;
    grid-template-columns: repeat(2, 1fr);
    gap: 30px;
    width: 90%;
    max-width: 1080px;
    justify-items: center;
    margin-top: 20px;
  }
  
  .overlayImage {
    max-width: 80%;
    max-height: 80%;
  }
  
  /* Responsive adjustments */
  @media (max-width: 768px) {
    .menu {
      gap: 20px;
    }
  }
  
  @media (max-width: 480px) {
    .menu {
      grid-template-columns: 1fr;
      gap: 15px;
    }
  }

================
File: components/Menu/Menu.tsx
================
// src/components/Menu/Menu.tsx
import React from 'react';
import styles from './Menu.module.css';
import MenuBox from '../MenuBox/MenuBox';
import impelLogo from '../../assets/impelLogo.png';
import hydroUBlue from '../../assets/hydroUBlue.png';
import centaurLogo from '../../assets/centaurLogo.png';
import energyLogo from '../../assets/energyLogo.png';
import { useNavigate } from 'react-router-dom';
import coleherne from '../../assets/coleherneLogo.png';
import coPilotLogo from '../../assets/coPilotLogo.png';

interface MenuProps {
  onSection1Click?: () => void;
  onSection2Click?: () => void; 
  onSection3Click?: () => void;
  onSection4Click?: () => void;
  onSection5Click?: () => void;
  onSection6Click?: () => void;
}

const Menu: React.FC<MenuProps> = ({ 
  onSection1Click,
  onSection2Click,
  onSection3Click,
  onSection4Click,
  onSection5Click,
  onSection6Click
}) => {
  const navigate = useNavigate();

  const handleBoxClick = (target: string) => {
    switch (target) {
      case 'section1':
        if (onSection1Click) {
          onSection1Click();
        } else {
          window.location.href = '/oman-tablet-app/index.html';
        }
        break;
      case 'section2':
        if (onSection2Click) {
          onSection2Click();
        } else {
          navigate('/impel');
        }
        break;
      case 'section3':
        if (onSection3Click) {
          onSection3Click();
        } else {
          window.location.href = 'https://external.university.hydroinc.com/index';
        }
        break;
      case 'section4':
        if (onSection4Click) {
          onSection4Click();
        } else {
          window.location.href = 'https://hydroinc.com/centaur-copy/';
        }
        break;
      case 'section5':
        if (onSection5Click) {
          onSection5Click();
        } else {
          // Open modal for Hydro CoPilot instead of careers page
          console.log('Opening CoPilot modal');
        }
        break;
      case 'section6':
        if (onSection6Click) {
          onSection6Click();
        } else {
          window.location.href = 'https://marketing.hydroinc.com/energyedge';
        }
        break;
      default:
        break;
    }
  };

  return (
    <div className={styles.menu}>
      <MenuBox target="section1" onClick={handleBoxClick}>
        <img src={coleherne} alt="Hydro University Logo" className={styles.overlayImage} />
      </MenuBox>
      <MenuBox target="section2" onClick={handleBoxClick} isFlashing={true}>
        <img src={impelLogo} alt="Impel" className={styles.overlayImage} />
      </MenuBox>
      <MenuBox target="section3" onClick={handleBoxClick}>
        <img src={hydroUBlue} alt="Hydro University Logo" className={styles.overlayImage} />
      </MenuBox>
      <MenuBox target="section4" onClick={handleBoxClick}>
        <img src={centaurLogo} alt="Centaur" className={styles.overlayImage} />
      </MenuBox>
      <MenuBox target="section5" onClick={handleBoxClick}>
        <img src={coPilotLogo} alt="Hydro CoPilot" className={styles.overlayImage} />
      </MenuBox>
      <MenuBox target="section6" onClick={handleBoxClick}>
        <img src={energyLogo} alt="Energy Edge" className={styles.overlayImage} />
      </MenuBox>
    </div>
  );
};

export default Menu;

================
File: components/MenuBox/MenuBox.module.css
================
.box {
    background-color: white;
    padding: 0;
    text-align: center;
    font-size: 24px;
    font-family: "Monaco", monospace;
    color: #456da7;
    border-radius: 50%;
    cursor: pointer;
    transition: all 0.3s ease;
    position: relative;
    overflow: hidden;
    height: 200px;
    width: 200px;
    display: flex;
    justify-content: center;
    align-items: center;
  }
  
  .box img {
    max-width: 80%;
    max-height: 80%;
    border-radius: 10%;
  }
  
  .box:hover {
    background-color: #3b5b9d;
    transform: translateY(-5px) rotate(-2deg);
    box-shadow: 0 8px 30px rgba(0, 0, 0, 0.3);
  }
  
  .box:hover img {
    filter: brightness(1.2);
  }
  
  /* Flashing text animation */
  @keyframes flash {
    0% { opacity: 1; }
    50% { opacity: 0.5; }
    100% { opacity: 1; }
  }
  
  .flashingText {
    animation: flash 2s infinite;
  }
  
  /* Responsive adjustments */
  @media (max-width: 1440px) {
    .box {
      height: 180px;
      width: 180px;
      font-size: 22px;
    }
  }
  
  @media (max-width: 768px) {
    .box {
      height: 150px;
      width: 150px;
      font-size: 18px;
    }
  }
  
  @media (max-width: 480px) {
    .box {
      height: 120px;
      width: 120px;
      font-size: 16px;
    }
  }

================
File: components/MenuBox/MenuBox.tsx
================
import React from 'react';
import styles from './MenuBox.module.css';

interface MenuBoxProps {
  target: string;
  onClick: (target: string) => void;
  children: React.ReactNode;
  isFlashing?: boolean;
}

const MenuBox: React.FC<MenuBoxProps> = ({ target, onClick, children, isFlashing = false }) => {
  const handleClick = () => {
    onClick(target);
  };

  return (
    <div 
      className={`${styles.box} ${isFlashing ? styles.flashingText : ''}`} 
      onClick={handleClick}
      data-target={target}
    >
      {children}
    </div>
  );
};

export default MenuBox;

================
File: components/Modal/Modal.module.css
================
.overlay {
  position: fixed;
  top: 0; left: 0; right: 0; bottom: 0;
  background: rgba(0,0,0,0.5);
  display: flex;
  justify-content: center;
  align-items: center;
  z-index: 1000;
}
.modal {
  background: white;
  width: 80vw;
  max-height: 80vh;
  padding: 20px;
  border-radius: 8px;
  box-shadow: 0 4px 12px rgba(0,0,0,0.3);
  overflow-y: auto;
  position: relative;
}
.compactModal {
  background: white;
  width: 80vw;
  height: 60vh;
  padding: 20px;
  border-radius: 8px;
  box-shadow: 0 4px 12px rgba(0,0,0,0.3);
  overflow-y: auto;
  position: relative;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: space-between;
}
.closeButton {
  position: absolute;
  top: 10px; right: 10px;
  background: transparent;
  border: none;
  font-size: 1.5rem;
  cursor: pointer;
}
.buttons {
  display: grid;
  grid-template-columns: 1fr 1fr;
  gap: 16px;
  margin-top: 20px;
}
.button {
  padding: 12px 20px;
  background: #456da7;
  color: white;
  border: none;
  border-radius: 50px;
  cursor: pointer;
  font-weight: 500;
  letter-spacing: 0.5px;
  box-shadow: 0 2px 4px rgba(0,0,0,0.2);
  transition: all 0.3s ease;
}
.button:hover {
  background: #3a5d91;
  transform: translateY(-2px);
  box-shadow: 0 4px 8px rgba(0,0,0,0.2);
}
.button:active {
  transform: translateY(0);
  box-shadow: 0 2px 4px rgba(0,0,0,0.2);
}

.qrCodeContainer {
  margin-top: 20px;
  text-align: center;
}

.qrImage {
  max-width: 150px;
  max-height: 150px;
}

.modalImages {
  display: flex;
  justify-content: center;
  align-items: center;
  flex-wrap: wrap;
  gap: 20px;
  margin: 20px 0;
}

.contentImage {
  max-width: 45%;
  max-height: 120px;
  object-fit: contain;
}

================
File: components/Modal/Modal.tsx
================
import React from 'react';
import styles from './Modal.module.css';

interface ModalProps {
  onClose: () => void;
  children: React.ReactNode;
  compact?: boolean; // New prop for compact modal style
}

const Modal: React.FC<ModalProps> = ({ onClose, children, compact = false }) => (
  <div className={styles.overlay} onClick={onClose}>
    <div className={compact ? styles.compactModal : styles.modal} onClick={e => e.stopPropagation()}>
      <button className={styles.closeButton} onClick={onClose}>×</button>
      {children}
    </div>
  </div>
);

export default Modal;

================
File: hooks/useMediaQuery.ts
================
import { useState, useEffect } from 'react';

// Custom hook for responsive design
const useMediaQuery = (query: string): boolean => {
  const [matches, setMatches] = useState(false);

  useEffect(() => {
    const media = window.matchMedia(query);
    if (media.matches !== matches) {
      setMatches(media.matches);
    }

    const listener = (): void => setMatches(media.matches);
    media.addEventListener('change', listener);
    
    return () => media.removeEventListener('change', listener);
  }, [matches, query]);

  return matches;
};

// Predefined breakpoints for consistency
export const breakpoints = {
  phone: '(max-width: 480px)',
  tablet: '(min-width: 481px) and (max-width: 768px)',
  laptop: '(min-width: 769px) and (max-width: 1440px)',
  desktop: '(min-width: 1441px)',
};

export default useMediaQuery;

================
File: pages/Careers/Careers.module.css
================
.container {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    text-align: center;
    height: 100vh;
    margin: 0;
    padding: 20px;
    background-color: white;
  }
  
  h1 {
    font-size: 32px;
    color: #003366;
    margin-bottom: 20px;
  }
  
  p {
    font-size: 18px;
    color: #333;
    max-width: 80%;
    margin-bottom: 40px;
  }
  
  img {
    width: 300px;
    height: auto;
    margin-bottom: 30px;
  }
  
  .backButton {
    padding: 10px 20px;
    background-color: #456da7;
    color: white;
    border: none;
    border-radius: 5px;
    cursor: pointer;
    font-size: 16px;
    transition: background-color 0.3s;
  }
  
  .backButton:hover {
    background-color: #3b5b9d;
  }
  
  /* Responsive adjustments */
  @media (max-width: 1440px) {
    h1 {
      font-size: 28px;
    }
    
    p {
      font-size: 16px;
    }
    
    img {
      width: 250px;
    }
  }
  
  @media (max-width: 768px) {
    h1 {
      font-size: 24px;
    }
    
    p {
      font-size: 14px;
      max-width: 90%;
    }
    
    img {
      width: 200px;
    }
  }
  
  @media (max-width: 480px) {
    h1 {
      font-size: 20px;
      margin-bottom: 15px;
    }
    
    p {
      font-size: 12px;
      max-width: 95%;
      margin-bottom: 20px;
    }
    
    img {
      width: 150px;
      margin-bottom: 20px;
    }
    
    .backButton {
      padding: 8px 16px;
      font-size: 14px;
    }
  }

================
File: pages/Careers/Careers.tsx
================
import React from 'react';
import styles from './Careers.module.css';
import tradeShowQR from '../../assets/tradeShowQR.png';
import { useNavigate } from 'react-router-dom';

const Careers: React.FC = () => {
  const navigate = useNavigate();

  const handleBack = () => {
    navigate('/');
  };

  return (
    <div className={styles.container}>
      <h1>You've got big dreams. We've got big opportunities.</h1>
      <p>
        Join the largest independent pump rebuilder in the world. Become part of the new generation 
        of industry experts who keep vital systems operating at maximum efficiency and peak reliability. 
        Pursue a challenging and rewarding career where you can make a difference.
      </p>
      <img src={tradeShowQR} alt="QR Code" />
      <button className={styles.backButton} onClick={handleBack}>
        Back to Home
      </button>
    </div>
  );
};

export default Careers;

================
File: pages/Home/Home.module.css
================
.container {
    display: flex;
    flex-direction: column;
    align-items: center;
    min-height: 100vh;
    padding-bottom: 30px;
  }
  
  /* Responsive adjustments */
  @media (max-width: 768px) {
    .container {
      padding-bottom: 20px;
    }
  }
  
  @media (max-width: 480px) {
    .container {
      padding-bottom: 15px;
    }
  }

  /* Modal button styles */
  .buttons {
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: 16px;
    margin-top: 20px;
  }
  
  .button {
    padding: 12px;
    background: #456da7;
    color: white;
    border: none;
    border-radius: 4px;
    cursor: pointer;
    font-size: 1rem;
    transition: background-color 0.3s ease;
  }
  
  .button:hover {
    background: #345681;
  }
  .modalImage {
    max-width: 80%;
    height: auto;
    margin: 20px auto;
    display: block;
    border-radius: 8px;
    box-shadow: 0 2px 10px rgba(0,0,0,0.1);
  }

  /* New styles for compact modals */
  .modalImages {
    display: flex;
    justify-content: center;
    align-items: center;
    flex-wrap: wrap;
    gap: 20px;
    margin: 20px 0;
  }

  .contentImage {
    max-width: 200px;
    max-height: 150px;
    object-fit: contain;
  }

  .qrCodeContainer {
    margin-top: 20px;
    text-align: center;
  }

  .qrImage {
    max-width: 150px;
    max-height: 150px;
    margin-bottom: 10px;
  }

  .ecosystemContainer {
    width: 100%;
    display: flex;
    justify-content: center;
    margin: 10px 0 15px 0;
  }

  .ecosystemImage {
    width: 90%;
    max-height: 180px;
    object-fit: contain;
  }

  /* Energy Edge bullet list styles */
  .energyBulletList {
    list-style: none;
    padding: 0;
    margin: 0;
  }

  .energyBulletItem {
    padding-left: 35px;
    position: relative;
    margin-bottom: 12px;
    display: flex;
    align-items: center;
  }

  .energyBulletIcon {
    position: absolute;
    left: 0;
    width: 20px;
    height: 20px;
    background-size: contain;
    background-repeat: no-repeat;
    display: inline-block;
  }

  /* Energy Edge modal hero image and layout */
  .energyHeroContainer {
    position: relative;
    width: 100%;
    height: 200px;
    overflow: hidden;
    margin-bottom: 20px;
  }

  .energyHeroImage {
    width: 100%;
    height: 100%;
    object-fit: cover;
  }

  .energyEdgeWallpaper {
    position: relative;
    max-width: 300px;
    height: auto;
    margin-left: 25px;
    margin-top: 100px;
    display: block;
  }

  /* Energy Edge modal background styling */
  .energyModalContent {
    position: relative;
    width: 100%;
    height: 100%;
    z-index: 1;
  }

  .energyBackgroundWrapper {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    overflow: hidden;
    z-index: -1;
  }

  .energyBackgroundImage {
    width: 100%;
    height: 100%;
    object-fit: cover;
    opacity: 0.9; /* Adjust opacity to ensure content remains readable */
  }

  .energyContentOverlay {
    background-color: rgba(255, 255, 255, 0.8);
    border-radius: 8px;
    padding: 20px;
    margin-top: 20px;
    margin-bottom: 20px;
  }

================
File: pages/Home/Home.tsx
================
// src/pages/Home/Home.tsx
import React, { useState } from 'react';
import { useNavigate } from 'react-router-dom';
import styles from './Home.module.css';
import Logo from '../../components/Logo/Logo';
import Menu from '../../components/Menu/Menu';
import Content from '../../components/Content/Content';
import Modal from '../../components/Modal/Modal';

// Import correct images from assets
import coleherneLogo from '../../assets/coleherneLogo.png';
import coPilotLogo from '../../assets/coPilotLogo.png';
import energyEdgeWallpaper from '../../assets/energyEdgeWallpaper.png';
import energyBolt from '../../assets/energyBolt.jpg';
import tradeShowQR from '../../assets/tradeShowQR.png';
import centaurEcosystem from '../../assets/centaurEcosystem.png';
import hydroULogo from '../../assets/hydroU.png';
import energyBackground from '../../assets/energyBackground.jpg';

const Home: React.FC = () => {
  const [activeSection] = useState<string | null>(null);
  
  // State for all modals
  const [showSection1Modal, setShowSection1Modal] = useState(false);
  const [showSection3Modal, setShowSection3Modal] = useState(false);
  const [showSection4Modal, setShowSection4Modal] = useState(false);
  const [showSection5Modal, setShowSection5Modal] = useState(false);
  const [showSection6Modal, setShowSection6Modal] = useState(false);
  const [isEnergyModalOpen, setEnergyModalOpen] = useState(false);
  
  const navigate = useNavigate();

  const handleOmanTabletAppClick = () => {
    navigate('/oman-tablet');
  };

  return (
    <div className={styles.container}>
      <Logo />
      <Menu 
        onSection1Click={() => setShowSection1Modal(true)}
        onSection2Click={() => navigate('/impel')}
        onSection3Click={() => setShowSection3Modal(true)}
        onSection4Click={() => setShowSection4Modal(true)}
        onSection5Click={() => setShowSection5Modal(true)}
        onSection6Click={() => setShowSection6Modal(true)}
      />
      {activeSection && <Content activeSection={activeSection} />}

      {/* Section 1 Modal - Knowledge Library (Menu Modal) */}
      {showSection1Modal && (
        <Modal onClose={() => setShowSection1Modal(false)}>
          <h2>Knowledge Library</h2>
          <img src={coleherneLogo} alt="Knowledge Library" className={styles.modalImage} />
          <p>Quickly search our entire knowledge base...</p>
          <div className={styles.buttons}>
            <button className={styles.button} onClick={handleOmanTabletAppClick}>
              Search Library
            </button>
            <button className={styles.button}>
              Filter by Topic
            </button>
            <button className={styles.button}>
              Download PDF
            </button>
            <button className={styles.button}>
              Watch Tutorial
            </button>
          </div>
        </Modal>
      )}

      {/* Section 3 Modal - Hydro University (Compact Modal with QR) */}
      {showSection3Modal && (
        <Modal onClose={() => setShowSection3Modal(false)} compact={true}>
          <h2>Hydro University</h2>
          
          {/* Primary focus on the Hydro University logo */}
          <div className={styles.ecosystemContainer}>
            <img 
              src={hydroULogo}
              alt="Hydro University" 
              className={styles.ecosystemImage} 
            />
          </div>
          
          <p>With over 50 years of experience in the pump industry, Hydro offers a wide range of technical webinars, e-learning, and in-person seminars for end-users who want to learn more about pumping technology to build their skills within the field.</p>
          
          <div className={styles.qrCodeContainer}>
            <img src={tradeShowQR} alt="QR Code" className={styles.qrImage} />
            <p>Scan to access Hydro University</p>
          </div>
        </Modal>
      )}

      {/* Section 4 Modal - Centaur Platform (Compact Modal with QR) */}
      {showSection4Modal && (
        <Modal onClose={() => setShowSection4Modal(false)} compact={true}>
          <h2>Centaur Platform</h2>
          
          {/* Primary focus on the ecosystem diagram */}
          <div className={styles.ecosystemContainer}>
            <img 
              src={centaurEcosystem}
              alt="Centaur Ecosystem" 
              className={styles.ecosystemImage} 
            />
          </div>
          
          <p>Complete monitoring solution with sensors, gateways, cloud analytics, and expert analysis for critical rotating equipment.</p>
          
          <div className={styles.qrCodeContainer}>
            <img src={tradeShowQR} alt="QR Code" className={styles.qrImage} />
            <p>Scan to access Centaur Platform</p>
          </div>
        </Modal>
      )}

      {/* Section 5 Modal - Hydro CoPilot (Compact Modal with QR) */}
      {showSection5Modal && (
        <Modal onClose={() => setShowSection5Modal(false)} compact={true}>
          <h2>Hydro CoPilot</h2>
          <div className={styles.modalImages}>
            <img src={coPilotLogo} alt="Hydro CoPilot" className={styles.contentImage} />
          </div>
          <p>Introducing Hydro CoPilot – Your AI-Powered Pump Intelligence Assistant</p>
          <p>Hydro is proud to introduce Hydro CoPilot, a groundbreaking new product that brings the power of AI directly to our customers. Built on decades of Hydro's intellectual property and detailed service history, Hydro CoPilot combines our proprietary pump data with advanced AI models to deliver a truly interactive and intelligent support experience.</p>
          <p>With Hydro CoPilot, customers can ask real-time questions about their specific pumps, such as what work has been done, when it was performed, and what steps to take for routine maintenance or troubleshooting. Whether it's historical repair data, recommended service intervals, or step-by-step maintenance guidance, Hydro CoPilot delivers tailored answers instantly, helping customers make faster, smarter decisions about their rotating equipment.</p>
          <p>This is not just a knowledge base, it's a smart companion designed to enhance reliability, reduce downtime, and bring decades of Hydro expertise to your fingertips.</p>
          <div className={styles.qrCodeContainer}>
            <img src={tradeShowQR} alt="QR Code" className={styles.qrImage} />
            <p>Scan to access Hydro CoPilot</p>
          </div>
        </Modal>
      )}

      {/* Section 6 Modal - Energy Edge (Compact Modal with QR) */}
      {showSection6Modal && (
        <Modal onClose={() => setShowSection6Modal(false)} compact={true}>
          <div className={styles.energyModalContent}>
            {/* Background wrapper */}
            <div className={styles.energyBackgroundWrapper}>
              <img 
                src={energyBackground} 
                alt="Energy background" 
                className={styles.energyBackgroundImage} 
              />
            </div>
            
            {/* Energy Edge Logo/Wallpaper */}
            <img 
              src={energyEdgeWallpaper} 
              alt="Energy Edge" 
              className={styles.energyEdgeWallpaper} 
            />
            
            {/* Content with semi-transparent overlay for readability */}
            <div className={styles.energyContentOverlay}>
              <h2>Energy Edge</h2>
              <p>Hydro Energy Edge combines our comprehensive services into a customized program that identifies opportunities for energy savings and supports end users in achieving their reliability and sustainability
              goals.</p>
              
              <h3>Some of the services available as part of the Hydro Energy Edge program include:</h3>
              <ul className={styles.energyBulletList}>
                <li className={styles.energyBulletItem}>
                  <span className={styles.energyBulletIcon} style={{ backgroundImage: `url(${energyBolt})` }}></span>
                  <span>Energy Audits Through Field Testing</span>
                </li>
                <li className={styles.energyBulletItem}>
                  <span className={styles.energyBulletIcon} style={{ backgroundImage: `url(${energyBolt})` }}></span>
                  <span>Comprehensive System Analysis</span>
                </li>
                <li className={styles.energyBulletItem}>
                  <span className={styles.energyBulletIcon} style={{ backgroundImage: `url(${energyBolt})` }}></span>
                  <span>Hydraulic Modifications to Optimize Performance and Energy Usage</span>
                </li>
                <li className={styles.energyBulletItem}>
                  <span className={styles.energyBulletIcon} style={{ backgroundImage: `url(${energyBolt})` }}></span>
                  <span>Upgraded Tolerances and Materials</span>
                </li>
                <li className={styles.energyBulletItem}>
                  <span className={styles.energyBulletIcon} style={{ backgroundImage: `url(${energyBolt})` }}></span>
                  <span>Certified Performance Testing</span>
                </li>
                <li className={styles.energyBulletItem}>
                  <span className={styles.energyBulletIcon} style={{ backgroundImage: `url(${energyBolt})` }}></span>
                  <span>Continuous Performance and Reliability Monitoring</span>
                </li>
              </ul>
            </div>
            
            <div className={styles.qrCodeContainer}>
              <img src={tradeShowQR} alt="QR Code" className={styles.qrImage} />
              <p>Scan for Energy Edge information</p>
            </div>
          </div>
        </Modal>
      )}

      {isEnergyModalOpen && (
        <Modal onClose={() => setEnergyModalOpen(false)}>
          <div className={styles.energyHeroContainer}>
            <img 
              src={energyBackground} 
              alt="Energy background" 
              className={styles.energyHeroImage} 
            />
          </div>
          <img 
            src={energyEdgeWallpaper} 
            alt="Energy Edge" 
            className={styles.energyEdgeWallpaper} 
          />
          <h2>Energy Edge</h2>
          {/* Rest of the modal content */}
        </Modal>
      )}
    </div>
  );
};

export default Home;

================
File: pages/Impel/Impel.module.css
================
.container {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: flex-start;
  min-height: 100vh;
  background: linear-gradient(135deg, #456da7 0%, #2e3c5d 100%);
  color: #fff;
  font-family: 'Segoe UI', Arial, sans-serif;
  padding: 0;
  box-sizing: border-box;
}

.logoContainer {
  width: 100%;
  background: transparent;
  text-align: center;
  margin: 40px 0 0 0;
}

.logoImage {
  max-width: 220px;
  filter: drop-shadow(0 4px 16px rgba(0,0,0,0.15));
}

.title {
  font-size: 2.5rem;
  font-weight: 700;
  margin: 24px 0 12px 0;
  text-align: center;
  letter-spacing: 1px;
  color: #fff;
  text-shadow: 0 2px 8px rgba(0,0,0,0.12);
}

.intro {
  max-width: 700px;
  text-align: center;
  margin-bottom: 36px;
  font-size: 1.25rem;
  color: #e0e6f6;
  line-height: 1.6;
}

.menu {
  display: flex;
  flex-direction: row;
  gap: 32px;
  width: 100%;
  max-width: 900px;
  justify-content: center;
  flex-wrap: wrap;
  margin-bottom: 40px;
}

.card {
  background: rgba(255,255,255,0.97);
  color: #2e3c5d;
  border-radius: 18px;
  cursor: pointer;
  transition: transform 0.18s, box-shadow 0.18s, background 0.18s;
  padding: 32px 28px 20px 28px;
  min-width: 260px;
  max-width: 340px;
  box-shadow: 0 6px 32px rgba(0,0,0,0.13);
  display: flex;
  flex-direction: column;
  align-items: center;
  margin-bottom: 0;
  border: 2px solid #e0e6f6;
  position: relative;
}

.card:hover, .card:focus {
  background: #456da7;
  color: #fff;
  transform: translateY(-6px) scale(1.03);
  box-shadow: 0 12px 40px rgba(69,109,167,0.25);
  border-color: #fff;
}

.cardTitle {
  font-size: 1.5rem;
  font-weight: 600;
  margin-bottom: 12px;
  letter-spacing: 0.5px;
}

.cardDescription {
  font-size: 1.08rem;
  color: #456da7;
  text-align: center;
  line-height: 1.5;
  margin-bottom: 0;
}

.card:hover .cardDescription, .card:focus .cardDescription {
  color: #fff;
}

@media (max-width: 900px) {
  .menu {
    flex-direction: column;
    gap: 24px;
    align-items: center;
  }
  .card {
    min-width: 220px;
    max-width: 95vw;
  }
}

@media (max-width: 600px) {
  .logoImage {
    max-width: 140px;
  }
  .title {
    font-size: 1.5rem;
  }
  .intro {
    font-size: 1rem;
  }
  .card {
    padding: 20px 10px 14px 10px;
  }
}

================
File: pages/Impel/Impel.tsx
================
import React from 'react';
import styles from './Impel.module.css';
import impelLogo from '../../assets/impelLogo.png';

const cardData = [
  {
    key: 'manual',
    title: 'Manual',
    description:
      "The IMPEL manual provides animated step-by-step instructions for installation and maintenance, including embedded tips from Hydro's experienced field service professionals.",
    href: '/7060_pump.htm',
  },
  {
    key: 'catalog',
    title: 'Catalog',
    description:
      'The IMPEL catalog is an interactive tool to explore the pump construction and bill of materials.',
    href: '/IMPEL_OH1_3196_CT.htm',
  },
];

const Impel: React.FC = () => {
  const handleCardClick = (href: string) => {
    window.location.href = href;
  };

  return (
    <div className={styles.container}>
      <div className={styles.logoContainer}>
        <img src={impelLogo} alt="Hydro Logo" className={styles.logoImage} />
      </div>
      <h1 className={styles.title}>IMPEL Interactive Platform</h1>
      <div className={styles.intro}>
        IMPEL is an interactive, digital maintenance platform that replicates pump design
        and installation to clearly illustrate each step of the maintenance procedure.
      </div>
      <div className={styles.menu}>
        {cardData.map((card) => (
          <div
            key={card.key}
            className={styles.card}
            tabIndex={0}
            onClick={() => handleCardClick(card.href)}
            onKeyDown={e => (e.key === 'Enter' || e.key === ' ') && handleCardClick(card.href)}
            role="button"
            aria-label={card.title}
          >
            <div className={styles.cardTitle}>{card.title}</div>
            <div className={styles.cardDescription}>{card.description}</div>
          </div>
        ))}
      </div>
    </div>
  );
};

export default Impel;

================
File: pages/OmanTablet/OmanTablet.module.css
================
.container {
  width: 100%;
  height: 100vh;
  display: flex;
  flex-direction: column;
  overflow: hidden;
}

.iframe {
  width: 100%;
  height: 100%;
  border: none;
  flex-grow: 1;
}

.backButton {
  position: fixed;
  top: 20px;
  left: 20px;
  z-index: 1000;
  background-color: #456da7;
  color: white;
  border: none;
  border-radius: 4px;
  padding: 10px 15px;
  font-size: 16px;
  cursor: pointer;
  box-shadow: 0 2px 5px rgba(0,0,0,0.2);
  display: flex;
  align-items: center;
  gap: 5px;
}

.backButton:hover {
  background-color: #345681;
}

================
File: pages/OmanTablet/OmanTablet.tsx
================
import React from 'react';
import { useNavigate } from 'react-router-dom';
import styles from './OmanTablet.module.css';

const OmanTablet: React.FC = () => {
  const navigate = useNavigate();

  const handleBack = () => {
    navigate('/');
  };

  return (
    <div className={styles.container}>
      <button className={styles.backButton} onClick={handleBack}>
        ← Back to Home
      </button>
      <iframe 
        src="/oman-tablet-app/index.html" 
        className={styles.iframe} 
        title="White Metal Bearing Refurbishment"
      />
    </div>
  );
};

export default OmanTablet;

================
File: routes/AppRoutes.tsx
================
import React from 'react';
import { Routes, Route } from 'react-router-dom';
import Home from '../pages/Home/Home';
import Careers from '../pages/Careers/Careers';
import Impel from '../pages/Impel/Impel';
import OmanTablet from '../pages/OmanTablet/OmanTablet';

const AppRoutes: React.FC = () => {
  return (
    <Routes>
      <Route path="/" element={<Home />} />
      <Route path="/careers" element={<Careers />} />
      <Route path="/impel" element={<Impel />} />
      <Route path="/oman-tablet" element={<OmanTablet />} />
    </Routes>
  );
};

export default AppRoutes;

================
File: styles/global.css
================
* {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
  }
  
  body {
    font-family: 'Arial', sans-serif;
    background-color: #456da7;
    overflow: hidden;
  }
  
  /* Fluid typography based on viewport width */
  @media (max-width: 480px) {
    html {
      font-size: 14px;
    }
  }
  
  @media (min-width: 481px) and (max-width: 768px) {
    html {
      font-size: 16px;
    }
  }
  
  @media (min-width: 769px) and (max-width: 1440px) {
    html {
      font-size: 18px;
    }
  }
  
  @media (min-width: 1441px) {
    html {
      font-size: 20px;
    }
  }

================
File: types/css.d.ts
================
declare module '*.module.css' {
    const classes: { [key: string]: string };
    export default classes;
  }
  
  declare module '*.gif' {
    const src: string;
    export default src;
  }
  
  declare module '*.png' {
    const src: string;
    export default src;
  }
  
  declare module '*.jpg' {
    const src: string;
    export default src;
  }
  
  declare module '*.svg' {
    const src: string;
    export default src;
  }

================
File: App.tsx
================
import React from 'react';
import { BrowserRouter } from 'react-router-dom';
import AppRoutes from './routes/AppRoutes';

const App: React.FC = () => {
  return (
    <BrowserRouter>
      <AppRoutes />
    </BrowserRouter>
  );
};

export default App;

================
File: main.tsx
================
import React from 'react';
import ReactDOM from 'react-dom/client';
import App from './App';
import './styles/global.css';

ReactDOM.createRoot(document.getElementById('root') as HTMLElement).render(
  <React.StrictMode>
    <App />
  </React.StrictMode>,
);
